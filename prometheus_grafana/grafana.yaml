apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  selector:
    app: grafana
  #type: NodePort
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      #nodePort: 30001

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: default
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure  # Traefik 路由入口配置
    cert-manager.io/cluster-issuer: letsencrypt-prod     # 使用 Let's Encrypt 的生产环境证书
spec:
  rules:
  - host: grafana.netvps.top
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
  tls:   # TLS 配置
  - hosts:
    - grafana.netvps.top
    secretName: grafana-netvps-top-tls 
    # 使用名为 grafana-netvps-top-tls 的 TLS 证书密钥对，用于 HTTPS 访问
    # 如果证书不存在，cert-manager 会自动向 Let's Encrypt 申请证书
    # 申请成功后，会将证书密钥对存储在名为 grafana-netvps-top-tls 的 Secret 中

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi  # or 500Mi , PV允许扩容，不允许缩容，因为缩容可能会导致数据丢失

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: "/var/lib/grafana"
          name: grafana-storage
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
